# Generated by Django 4.2.1 on 2023-06-17 07:08

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PlayerPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'positions',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
            options={
                'verbose_name_plural': 'teams',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('nationality', models.CharField(max_length=50)),
                ('age', models.CharField(max_length=50)),
                ('altura', models.CharField(max_length=50)),
                ('foot', models.CharField(max_length=50)),
                ('number', models.CharField(max_length=50)),
                ('market_value', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('points', models.IntegerField(default=0)),
                ('matches', models.CharField(blank=True, max_length=20, null=True)),
                ('started', models.CharField(blank=True, max_length=20, null=True)),
                ('min_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('goals', models.CharField(blank=True, max_length=20, null=True)),
                ('exp_goals', models.CharField(blank=True, max_length=20, null=True)),
                ('penalty_goals', models.CharField(blank=True, max_length=20, null=True)),
                ('penalty_conversion', models.CharField(blank=True, max_length=20, null=True)),
                ('score_freq', models.CharField(blank=True, max_length=20, null=True)),
                ('goals_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_shots', models.CharField(blank=True, max_length=20, null=True)),
                ('shots_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('shots_target', models.CharField(blank=True, max_length=20, null=True)),
                ('shots_on_target_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('bigchances_missed', models.CharField(blank=True, max_length=20, null=True)),
                ('goal_conversion', models.CharField(blank=True, max_length=20, null=True)),
                ('freekick_goals', models.CharField(blank=True, max_length=20, null=True)),
                ('freekick_conversion', models.CharField(blank=True, max_length=20, null=True)),
                ('goals_insidebox', models.CharField(blank=True, max_length=20, null=True)),
                ('goals_outsidebox', models.CharField(blank=True, max_length=20, null=True)),
                ('head_goals', models.CharField(blank=True, max_length=20, null=True)),
                ('left_goals', models.CharField(blank=True, max_length=20, null=True)),
                ('right_goals', models.CharField(blank=True, max_length=20, null=True)),
                ('penalty_won', models.CharField(blank=True, max_length=20, null=True)),
                ('assists', models.CharField(blank=True, max_length=20, null=True)),
                ('exp_assists', models.CharField(blank=True, max_length=20, null=True)),
                ('total_touches', models.CharField(blank=True, max_length=20, null=True)),
                ('touches_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('bigchances_created', models.CharField(blank=True, max_length=20, null=True)),
                ('total_key_passes', models.CharField(blank=True, max_length=20, null=True)),
                ('key_passes_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_acc_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('acc_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_acc_own_half', models.CharField(blank=True, max_length=20, null=True)),
                ('acc_own_half', models.CharField(blank=True, max_length=20, null=True)),
                ('total_acc_oppo_half', models.CharField(blank=True, max_length=20, null=True)),
                ('acc_oppo_half', models.CharField(blank=True, max_length=20, null=True)),
                ('total_acc_longballs', models.CharField(blank=True, max_length=20, null=True)),
                ('acc_longballs', models.CharField(blank=True, max_length=20, null=True)),
                ('total_acc_chipballs', models.CharField(blank=True, max_length=20, null=True)),
                ('acc_chipballs', models.CharField(blank=True, max_length=20, null=True)),
                ('total_acc_crosses', models.CharField(blank=True, max_length=20, null=True)),
                ('acc_crosses', models.CharField(blank=True, max_length=20, null=True)),
                ('total_interceptions', models.CharField(blank=True, max_length=20, null=True)),
                ('intercep_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_tackles', models.CharField(blank=True, max_length=20, null=True)),
                ('tackles_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_poss_won', models.CharField(blank=True, max_length=20, null=True)),
                ('poss_won', models.CharField(blank=True, max_length=20, null=True)),
                ('total_dribbled', models.CharField(blank=True, max_length=20, null=True)),
                ('dribbled_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_clearences', models.CharField(blank=True, max_length=20, null=True)),
                ('clearences_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('errors_leadtoshot', models.CharField(blank=True, max_length=20, null=True)),
                ('errors_leadtogoal', models.CharField(blank=True, max_length=20, null=True)),
                ('penalty_commited', models.CharField(blank=True, max_length=20, null=True)),
                ('total_succ_dribbles', models.CharField(blank=True, max_length=20, null=True)),
                ('succ_dribbles_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_duels_won', models.CharField(blank=True, max_length=20, null=True)),
                ('duels_won_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_ground_duels_won', models.CharField(blank=True, max_length=20, null=True)),
                ('ground_duels_won_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_air_duels_won', models.CharField(blank=True, max_length=20, null=True)),
                ('air_duels_won_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_poss_lost', models.CharField(blank=True, max_length=20, null=True)),
                ('poss_lost_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_fouls', models.CharField(blank=True, max_length=20, null=True)),
                ('fouls_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('total_fouled', models.CharField(blank=True, max_length=20, null=True)),
                ('fouled_per_game', models.CharField(blank=True, max_length=20, null=True)),
                ('yellows', models.CharField(blank=True, max_length=20, null=True)),
                ('yellow_reds', models.CharField(blank=True, max_length=20, null=True)),
                ('reds', models.CharField(blank=True, max_length=20, null=True)),
                ('slug', models.SlugField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player', to='home.playerposition')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player', to='home.team')),
            ],
            options={
                'verbose_name_plural': 'Players',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('team', models.ManyToManyField(to='home.player')),
            ],
        ),
    ]
